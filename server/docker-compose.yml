version: '3.1'

services:
    postgres:
        container_name: movie-lister_postgresql_container
        image: postgres:latest
        restart: always # Ensures the service automatically restarts if it stops for any reason
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data # Persists the database data using a Docker volume and ensures the database data remains intact across container restarts
            # - postgres_data: create "postgres_data" volume if it doesnâ€™t already exist on the host machine at "/var/lib/docker/volumes/postgres_data/_data/"
            # - /var/lib/postgresql/data: path (the directory where PostgreSQL stores its database files inside the container) inside the container where the volume (which exists outside the container) will be mounted

    pgadmin:
        container_name: movie-lister_pgadmin4_container
        image: dpage/pgadmin4:latest
        restart: always # Ensures the service automatically restarts if it stops for any reason
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - '5050:80'
        depends_on:
            - postgres # pgAdmin service starts only after the PostgreSQL service is up

# Create and manage the "postgres_data" volume
# This volume is used by PostgreSQL service to store database data persistently
# The database data will now be stored in the postgres_data volume, ensuring that it persists across Docker container restarts and even if the container is removed
volumes:
    postgres_data:
